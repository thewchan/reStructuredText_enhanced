%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: restructuredtext enhenced
file_extensions:
  - rst
scope: source.restructuredtext

variables:
  start_str_prec: |
    (?x)[\s\'\"\(\[\{\<]
  end_str_folw: |
    (?x)[\s\'\"\.\,\:\;\!\?\-\)\]\}\/\\\>]
  lower_roman: |
    (?x)m{0,4}(cm|cd|d?c{0,3})(xc|xl|l?x{0,3})(ix|ix|v?i{0,3})
  upper_roman: |
    (?x)M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})

contexts:
  # The prototype context is prepended to all contexts but those setting
  # meta_include_prototype: false.
  prototype:
    - include: escaped_character

  main:
    # The main context is the initial starting point of our syntax.
    # Include other contexts from here (or specify them directly).
    - meta_scope: text.restructuredtext
    - include: inline_markup
    - include: section
    - include: lists
    - match: (?<=^)(\:)(?!\:)
      captures:
        1: meta.function entity.name.function.field_name.start.restructuredtext
      push: field_name
    - match: (?<=^)[\-|\-\-|\/](?=\S)
      # captures:
      #   1: constant.language.option_list.restructuredtext
      set: option_list
    - match: (?<!{{start_str_prec}})\:\:(?=\n)
      scope: constant.character.entity.literal_block.restructuredtext
      push: literal_block
    - match: ^[ ]{0,60}(\|)[ \n]
      captures:
        1: constant.character.entity.line_block.restructuredtext
      push: line_block
    - match: (?<=^)\s+(?=\S)
      scope: markup.quote.start.restructuredtext
      push: block_quote
    - match: (?<=^)>>>
      scope: markup.inserted.doctest_block.start.restructuredtext
      push: doctest_block
    - match: ^[ ]{0,60}\.\.(?=[ ])
      scope: comment.block.html.begin.restructuredtext
      set: explicit_block

  inline_markup:
    - match: (?<=^|{{start_str_prec}})\*\*(?=[^\s{{end_str_folw}}])
      scope: markup.bold.punctuation.start.restructuredtext
      push: strong
    - match: (?<=^|{{start_str_prec}})\*(?=[^\s{{end_str_folw}}])
      scope: markup.italic.punctuation.start.restructuredtext
      push: emphasize
    - include: phrased_reference
    - include: interpreted_text
    - match: (?<=^|{{start_str_prec}})``(?!``)
      scope: markup.raw.punctuation.inline_literal.start.restructuredtext
      push: inline_literal
    - include: reference
    - include: anonymous_reference
    - match: (?<=^|{{start_str_prec}})_`\b(?=[^{{end_str_folw}}\`]+)
      scope: markup.underline.link.inline_literal_tgt.start.restructuredtext
      push: inline_internal_target
    - match: (?<=^|{{start_str_prec}})\|(?=[^{{end_str_folw}}])
      scope: |
        punctuation.definition.string.begin.markdown.sub_ref.restructuredtext
      push: sub_ref
    - include: footnote_ref
    - include: citation_ref
    - include: inline_URL
    - match: (?<=^|{{start_str_prec}})\:(?=[^{{end_str_folw}}\`]+)
      scope: meta.function entity.name.function.role_name.restructuredtext
      push: role_name


  lists:
    - include: inline_markup
    - match: ^[ ]{0,60}([*+-])(?=\s)
      captures:
        1: markup.list punctuation.definition.list_item.bullet.restructuredtext
      set: list_item
    - match: ^[ ]{0,60}({{upper_roman}}[\.\)])(?= )
      captures:
        1: |
          markup.list punctuation.definition.list_item.numbered.restructuredtext
      set: list_item
    - match: ^[ ]{0,60}(\d+[\.\)])(?= )
      captures:
        1: |
          markup.list punctuation.definition.list_item
                .numbered.restructuredtext
      set: list_item
    - match: ^[ ]{0,60}([a-zA-Z][\.\)])(?= )
      captures:
        1: |
          markup.list punctuation.definition.list_item
                .numbered.restructuredtext
      set: list_item
    - match: ^[ ]{0,60}({{lower_roman}}[\.\)])(?= )
      captures:
        1: |
          markup.list punctuation.definition.list_item
                .numbered.restructuredtext
      set: list_item
    - match: ^[ ]{0,60}(\#[\.\)])(?= )
      captures:
        1: |
          markup.list punctuation.definition.list_item
                .autonumbered.restructuredtext
      set: list_item
    - match: (?<=^)\w+(?=\n)(?=\s+)
      scope: markup.list punctuation.definition.list_item.def.restructuredtext
      set: definition
    - match: ^[ ]{0,60}({{upper_roman}}[\.\)])(?= )
      captures:
        1: |
          markup.list punctuation.definition.list_item.numbered.restructuredtext
      set: list_item
    - match: ^[ ]{0,60}(\(\d+\))(?= )
      captures:
        1: |
          markup.list punctuation.definition.list_item.numbered.restructuredtext
      set: list_item
    - match: ^[ ]{0,60}(\([a-zA-Z]\))(?= )
      captures:
        1: |
          markup.list punctuation.definition.list_item.numbered.restructuredtext
      set: list_item
    - match: ^[ ]{0,60}(\({{lower_roman}}\))(?= )
      captures:
        1: |
          markup.list punctuation.definition.list_item.numbered.restructuredtext
      set: list_item
    - match: ^[ ]{0,60}(\(\#\)])(?= )
      captures:
        1: |
          markup.list punctuation.definition.list_item
                .autonumbered.restructuredtext
      set: list_item
    - match: (?<=^)\w+(?=\n)(?=\s+)
      scope: |
        markup.list punctuation.definition.list_item.definition.restructuredtext
      set: definition
    - match: (?<=^)(\w+)([ ]\:[ ])
      captures:
        1: markup.list punctuation.definition.list_item.def.restructuredtext
        2: constant.other.object.key.def.class.restructuredtext
      set: definition_classifier


  strong:
    - meta_scope: markup.bold.restructuredtext
    - match: (?<=[^\s{{start_str_prec}}])\*\*(?=$|{{end_str_folw}})
      scope: markup.bold.punctuation.end.restructuredtext
      pop: true

  emphasize:
    - meta_scope: markup.italic.restructuredtext
    - match: (?<=[^\s{{start_str_prec}}])\*(?=$|{{end_str_folw}})
      scope: markup.italic.punctuation.end.restructuredtext
      pop: true

  phrased_reference:
    - match: |
        (?x)(?<=^|{{start_str_prec}})\`[^\`]+?\`_(?={{end_str_folw}})
      scope: string.other.link.title.phrase_ref.restructuredtext

  interpreted_text:
    - match: |
        (?x)(?<=^|{{start_str_prec}})(\`)([^\`]+?)(\`)(?={{end_str_folw}})
      captures:
        1: string.other.link.title.interpreted_text.restructuredtext
        2: storage.modifier.interpreted_text.restructuredtext
        3: string.other.link.title.interpreted_text.restructuredtext

  inline_literal:
    - meta_scope: markup.raw.inline_literal.restructuredtext
    - match: \``(?={{end_str_folw}})
      scope: markup.raw.punctuation.end.inline_literal.restructuredtext
      pop: true

  reference:
    - match: |
        (?x)(?<=^|{{start_str_prec}})[^{{end_str_folw}}]+?\_(?={{end_str_folw}})
      scope: string.other.link.title.ref.restructuredtext

  anonymous_reference:
    - match: |
        (?x)(?<=^|{{start_str_prec}})[^{{end_str_folw}}]+?\_\_(?={{end_str_folw}})
      scope: string.other.link.title.anonref.restructuredtext

  inline_internal_target:
    - meta_scope: markup.underline.link.inline_internal_tgt.restructuredtext
    - match: \`(?={{end_str_folw}})
      scope: markup.underline.link.end.inline_internal_tgt.restructuredtext
      pop: true

  footnote_ref:
    - match: (?<=^|{{start_str_prec}})(\[)(\d+)(\]\_)(?={{end_str_folw}})
      captures:
        1: |
          punctuation.definition.string.begin.markdown.footnote_ref.restructuredtext
        2: string.other.link.title.footnote_ref.restructuredtext
        3: |
          punctuation.definition.string.end.markdown.footnote_ref.restructuredtext

  citation_ref:
    - match: |
        (?x)(?<=^|{{start_str_prec}})(\[)(\#?[0-9a-zA-Z\-\_\.]+)(\]\_)(?={{end_str_folw}})
      captures:
        1: |
          punctuation.definition.string.begin.markdown.citation_ref.restructuredtext
        2: string.other.link.title.citation_ref.restructuredtext
        3: |
          punctuation.definition.string.end.markdown.citation_ref.restructuredtext
    - match: |
        (?x)(?<=^|{{start_str_prec}})(\[)(\*)(\]\_)(?={{end_str_folw}})
      captures:
        1: |
          punctuation.definition.string.begin.markdown.citation_ref.restructuredtext
        2: string.other.link.title.citation_ref.restructuredtext
        3: |
          punctuation.definition.string.end.markdown.citation_ref.restructuredtext

  sub_ref:
    - meta_scope: string.other.link.title.sub_ref.restructuredtext
    - match: (?<=[^\s{{start_str_prec}}])\|\_{0,2}(?=$|{{end_str_folw}})
      scope: |
        punctuation.definition.string.end.markdown.citation_ref.restructuredtext
      pop: true


  inline_URL:
    - match: |
        (?x)(<?)(https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.
        [a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*))(>`_)?
      captures:
        1: string.other.link.title.ref.restructuredtext
        2: markup.underline.link.inline_url.restructuredtext
        5: string.other.link.title.ref.restructuredtext

  role_name:
    - meta_scope: meta.function entity.name.function.role_name.restructuredtext
    - match: (?<=\:)(?=\`)
      scope: constant.language.role_content.restructuredtext
      set: role_content
    - match: |
        (?x) \:(?=\s+[^\`])
      pop: true

  role_content:
    - meta_scope: constant.language.role_content.restructuredtext
    - match: \`(?=$|{{end_str_folw}}|\n)
      pop: true

  escaped_character:
    - match: \\.
      scope: constant.character.escape.restructuredtext

  section:
    - match: (?<=^)([\"|`=\-:'~^_*+#<>\.])\1{2,}(?=$\n)
      scope: markup.heading.restructuredtext

  list_item:
    - include: inline_markup
    - include: lists
    - meta_scope: markup.list_item.restructuredtext
    - match: (?<=^)(?=\S)
      pop: true

  definition:
    - include: inline_markup
    - meta_scope: markup.def.restructuredtext
    - match: |
        (?x)[ ]\:[ ]
      scope: constant.other.object.key.def.class.restructuredtext
      set: definition_classifier
    - match: (?<=^).
      pop: true

  definition_classifier:
    - meta_scope: constant.other.object.key.def.class.restructuredtext
    - match: |
        (?x)[ ]\:[ ]
      scope: constant.other.object.key.def.class.restructuredtext
      set: definition_classifier
    - match: $
      set: definition

  field_name:
    - meta_scope: meta.function entity.name.function.field.restructuredtext
    - match: |
        (?x)(?<=[^\:])\:
      scope: meta.function entity.name.function.end.field.restructuredtext
      set: list_item

  option_list:
    - meta_scope: constant.language.option_list.restructuredtext
    - match: (?<=[ ])\s
      set: list_item

  literal_block:
    - meta_include_prototype: false
    - match: (?<=^)>
      set: unindented_literal_block
    - match: ^[ ]
      scope: markup.raw.restructuredtext
    - match: |
        (?x)(?<!^).
      scope: markup.raw.restructuredtext
    - match: (?<=^)\S
      pop: true

  unindented_literal_block:
    - meta_include_prototype: false
    - match: |
        (?x)[^\n>]
      scope: markup.raw
    - match: (?<=^)[^>]
      pop: true

  line_block:
    - include: inline_markup
    - match: |
        (?x)[ ]{0,60}(\|)[ \n]
      captures:
        1: constant.character.entity.line_block.restructuredtext
      set: line_block
    - match: (?<=^)[^\|\s]
      scope: markup.line_block.end.restructuredtext
      pop: true

  block_quote:
    - include: inline_markup
    - include: lists
    - meta_scope: markup.quote.restructuredtext
    - match: (?<=^)(?=\S)
      scope: markup.quote.end.restructuredtext
      pop: true

  doctest_block:
    - match: .
      embed: scope:source.python
      escape: $
    - match: |
        (?x)[ ]{0,60}(?=$)
      scope: markup.raw.doctest_printout.restructuredtext
      pop: true

  explicit_block:
    - meta_scope: comment.block.html.restructuredtext
    - match: (?<=\.\. )(\[)(?=\d+|\#|\#\w+|\*)
      captures:
        1: |
          punctuation.definition.string.begin.markdown.footnote.restructuredtext
      set: footnote
    - match: (?<=\.\. )(\[)(?=\w+)
      captures:
        1: |
          punctuation.definition.string.begin.markdown.citation.restructuredtext
      set: citation
    - match: (?<=\.\. )(\_)(?=\w+)
      captures:
        1: |
          markup.underline.link.external_target.restructuredtext
      set: external_target
    - match: |
        (?x)\w+?\:\:
      scope: support.type.primitive.directive_block_restructuredtext
      set: directive_block
    - match: (?<=^)(?=\S)
      scope: comment.block.html.end.restructuredtext
      pop: true
    - include: sub_def

  footnote:
    - include: inline_markup
    - meta_scope: constant.other.timestamp.footnote.restructuredtext
    - match: (?<=\[)(\d+|\#|\#\w+|\*)(\])[ ].
      captures:
        1: string.other.link.title.footnote.restructuredtext
        2: |
          punctuation.definition.string.end.markdown.footnote.restructuredtext
    - match: $
      pop: true

  citation:
    - include: inline_markup
    - meta_scope: constant.other.timestamp.citation.restructuredtext
    - match: (?<=\[)(\w+)(\])[ ].
      captures:
        1: string.other.link.title.citation.restructuredtext
        2: |
          punctuation.definition.string.end.markdown.citation.restructuredtext
    - match: $
      pop: true

  sub_def:
    - match: (?<=\s)(\|)(\w+)(\|)(?=\s)
      captures:
        1: punctuation.definition.string.begin.markdown.sub_def.restructuredtext
        2: string.other.link.title.sub_ref.restructuredtext
        3: punctuation.definition.string.end.markdown.sub_d

  external_target:
    - include: inline_URL
    - meta_scope: text.external_target.restructuredtext
    - match: \w+\:(?=[\n ])
      scope: markup.underline.link.external_target.restructuredtext
    - match: $
      pop: true

  directive_block:
    - meta_scope: string.quoted source.directive_block.restructuredtext
    - include: inline_markup
    - include: lists
    - match: |
        (?x)(^[ ]{0,60})(\:\w+?\:)(?=[ ])
      captures:
        2: support.type.builtin.directive_attr.restructuredtext
    - match: |
        (?x)>>>[ ]
      scope: markup.inserted.doctest_block.start.restructuredtext
      set: doctest_block
    - match: ^(?=\S)
      pop: true
